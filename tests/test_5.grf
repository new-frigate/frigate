# test_5 
# Answer: InternalEdge <int_1> in Subgraph <sub_2> duplicates ExternalEdge 
# Description: internal edge and external edge have same names

<graph>

	version = 1.0

	<header>
		@
			some code here
		@
	</header>

	<root>
		root = "root"
	</root>

	<tail>
		@
			some code here
		@
	</tail>
	
	main_subgraph = "sub_1"

	<subgraph>
		name = "sub_1"

		condition = @ some code here @

		<vertex>
			name = "sub_1_vert_1"
			template = "vert_temp_1"
		</vertex>

	</subgraph>

	<subgraph>
		name = "sub_2"

		condition = @ some code here @

		<vertex>
			name = "vert_1"
			template = "vert_temp_1"
		</vertex>

		<vertex>
			name = "vert_2"
			
			<exchange>
				name = "ex_1"
				recv = "int_1"
			</exchange>
		</vertex>
	
		<internal_edge>
			name = "int_1"
			template = "edge_temp_1"	
			send = ("vert__1", "ex_1")
			recv = ("vert_2", "ex_2")
		</internal_edge>

	</subgraph>


	<vertex_template>
		name = "vert_temp_1"		

		<code>
			@ 
				some code here
			@
		</code>
		
		<exchange>
			name = "ex_1"
			
			send = "int_1"
		</exchange>
	</vertex_template>

	<edge_template>
	    name="first"
		 <send>   
		    <fragment>
		        variable = @ some code here @
		        type     = @ some code here @
		        left     = @ some code here @
		        right    = @ some code here @
		    </fragment>
		
		    <fragment>
		        variable = @ some code here @
		        type     = @ some code here @
		        left     = @ some code here @
		        right    = @ some code here @
		    </fragment>
		
		 </send>
	
		 <recv>
		    <fragment>
		        variable = @a["offset"]@
		        type     = @ my_mpi_type["offset"] @
		        left     = @ (i-1)*global_size/num_vertices @
		        right    = @ i*global_size/num_vertices     @
		    </fragment>
		 </recv>
	</edge_template>

	<external_edge>
		name = "int_1"
		template = "edge_temp_1"
		send = ("sub_1", "sub_1_vert_1", "ex_1")
		recv = ("sub_2", "vert_2", "ex_1")
	</external_edge>

</graph>

