# test_1
# Answer: BAD VERTEX ERR
# Description: Vertex <generic> in subgraph <world1> for SEND at internal edge <my second internal edge> not found

# hello
# hello
<graph>	
	#
	# Version of Graph format
	#
	version = 1.0
	
	<header>
		@
		       msdl;jsfgjdfglkjfsl;gkhj
		       g,fsg,hjdf;glkjf;lgjflgkhj
		       g;lhdfg;lhjkdf;ljfsd;khlj
		      \@
		      \@
		       ffghdfgfghfg
		       fghdfghfgh
		@
	</header>
	
	<root>	
	    root="root"
	</root>
	
	<tail>
		@
		Now it is code
		fghdfghdfghf
		fghdfghf
		@
	</tail>
	
	
	# main_subgraph="hello \"world\""
	main_subgraph="world"
	
	<subgraph>
		name # hello
		 = # dddd
		"world"
		#
		# beee
		#
		
		condition = @ 1 @
		
		<vertex>
			name="abba"
			template = "generic"
		</vertex>

		<vertex>
			name="abbb"
			template = "generic"
		</vertex>
		
		<vertex>
			name="bbb"
			
			<code>
				file="test_1_code_file.cpp"
			</code>
			
			<code>
				@
				 if(a==0)
				 {
				  a=10;
				 }
				@
			</code>
			
			<code>
				io_volume  = @ 0       @
				code_volume= @ abc*bca @
				@
				 if(a==0)
				 {
				  a=10;
				 }
				@
			</code>
			
			<exchange>
			    name="first"
			    send="my first internal edge"
			    send="my first control edge"
			    recv="my second internal edge"
			    recv="my first external edge"
			</exchange>

			<exchange>
			    name="second"
			    send="my fifth internal edge"
			    send="my third control edge"
			    recv="my fourth internal edge"
			    recv="my third external edge"
			</exchange>
					
		</vertex>
		
		<internal_edge>
		    name="my first internal edge"
		    template="first"
		    send=("bbb","first")
		    recv=("abba","first")
		</internal_edge>

		<internal_edge>
		    name="my second internal edge"
		    template="first"
		    send=("abba","first")
		    recv=("bbb","first")
		</internal_edge>

		<internal_edge>
		    name="my third internal edge"
		    template="first"
		    send=("bbb","first")
		    recv=("abba","first")
		</internal_edge>

		<internal_edge>
		    name="my fifth internal edge"
		    template="first"
		    send=("bbb","second")
		    recv=("abba","first")
		</internal_edge>

		<internal_edge>
			name = "my fourth internal edge"
			template = "first"
			send= ("abba", "first")
			recv = ("bbb", "second")
		</internal_edge>
		
		<control_edge>
		    name="my first control edge"
		    template="first"
		    send=("bbb","first")
		</control_edge>

		<control_edge>
		    name="my third control edge"
		    template="first"
		    send=("bbb","second")
		</control_edge>


		<control_edge>
			name = "my second control edge"
			template = "first"
			send = ( "abba" , "first" )
		</control_edge>

	</subgraph>

	<subgraph>
		name = "world1"
		condition = @ 1 @
		<vertex>
			name = "abba"
			template = "generic"
		</vertex>

		<vertex>
			name = "bbb"
			
			<exchange>
				name = "first"
				send = "my third internal edge"
				recv = "my second internal edge"	
			</exchange>
		</vertex>

		<internal_edge>
			name = "my third internal edge"
			template = "first"
			send= ("abba", "first")
			recv = ("bbb", "first")
		</internal_edge>

		<internal_edge>
			name = "my second internal edge"
			template = "first"
			send= ("generic", "first")
			recv = ("bbb", "first")
		</internal_edge>

		<control_edge>
			name = "my second control edge"
			template = "first"
			send = ("generic", "first")
		</control_edge>

	</subgraph>
	
	<edge_template>
	    name="first"
		 <send>   
		    <fragment>
		        variable = @a["offset"]@
		        type     = @ my_mpi_type["offset"] @
		        left     = @ (i-1)*global_size/num_vertices @
		        right    = @ i*global_size/num_vertices     @
		    </fragment>
		
		    <fragment>
		        variable = @a["offset"]@
		        type     = @ my_mpi_type["offset"] @
		        left     = @ (i-1)*global_size/num_vertices @
		        right    = @ i*global_size/num_vertices     @
		    </fragment>
		
		 </send>
	
		 <recv>
		    <fragment>
		        variable = @a["offset"]@
		        type     = @ my_mpi_type["offset"] @
		        left     = @ (i-1)*global_size/num_vertices @
		        right    = @ i*global_size/num_vertices     @
		    </fragment>
		 </recv>
	</edge_template>
	
	<external_edge>
	    name="my first external edge"
	    template="first"
	    send=("world","abba",  "first")
	    recv=("world","bbb" , "first")
	</external_edge>

	<external_edge>
	    name="my third external edge"
	    template="first"
	    send=("world","abba",  "first")
	    recv=("world","bbb" , "second")
	</external_edge>


	<external_edge>
	    name="my second external edge"
	    template="first"
	    send=("world","bbb",  "first")
	    recv=("world","abba" , "first")
	</external_edge>

	
	<vertex_template>
	    name="generic"
	    
	    <code>
	        io_volume = @ a+bbbb @
	        file="test_1_code_file.cpp"
	    </code>
	
	    <code>
	        @
             if(a==0)
             {
               a=10;
             }
	        @
	    </code>
	
	    <code>
	        io_volume  = @ 0       @
	        code_volume= @ abc*bca @
	        @
	             if(a==0)
	             {
	                a=10;
	             }
	        @
	    </code>
	
	    <exchange>
	        name="first"
	        
	        send="my second control edge"
	        send="my second internal edge"
	        
	        recv="my second external edge"
	        recv="my third internal edge"
	    </exchange>

		
	</vertex_template>

</graph># gfghfghfg
# hello
# ehlo
